% layout 'default';
% title 'nixos/install';
<style>
.root code::before {
  content: "root# ";
  color: red;
}
.user code::before {
  content: "user$ ";
  color: green;
}
span {
  font-weight: bold;
}
</style>

<label for="swap">
      Swap size (<span class="swap">256</span>M):
</label>
<input id="swap" type="range" min=128 max=4096 step=128 value=256 />
<label for="input-disk">
  Disk: /dev/
</label>
<input id="input-disk" type="text" value="sda" />
<label for="input-branch">
  Channel (<a href="https://nixos.org/channels/" title="Pick a channel from this page">?</a>):
</label>
<input id="input-branch" type="text" value="17.03-small" />

<pre class="root"><code>bash</code>
<code>sgdisk -o -a 2 -n 1:34:2047 -t 1:ef02 -c 1:bios-boot -a 2048 \\
-n 2:2048:<span class="swap" title="Swap">256</span>M -t 2:8200 -c 2:swap \\
-N 3 -t 3:8304 -c 3:root \\
-G /dev/<span class="disk">sda</span></code>
<code>mkswap -Lswap /dev/<span class="disk">sda</span>2</code>
<code>swapon /dev/<span class="disk">sda</span>2</code>
<code>mkfs.btrfs -Lroot /dev/<span class="disk">sda</span>3</code>
<code>mount -o compress /dev/<span class="disk">sda</span>3 /mnt</code>
<code>mount -o remount,size=256M /tmp</code>
<code>mount -t tmpfs -o size=256M tmpfs /var/empty</code>
<code>groupadd -r -g 30000 nixbld</code>
<code>useradd -c "Nix build user 1" -u 30001 -d /var/empty -g nixbld -G nixbld -M -N -r -s "$(which nologin)" nixbld1</code>
<code>usermod -s "$(which bash)" nixbld1</code>
<code>mkdir -m 0755 /mnt/nixtmp && chown nixbld1:nixbld /mnt/nixtmp</code>
<code>ln -sv /mnt/nixtmp /nix</code>
<code>su - nixbld1</code></pre>

<pre class="user"><code>export LANG=POSIX</code>
<code>export LC_ALL=POSIX</code>
<code>export NIX_IGNORE_SYMLINK_STORE=1</code>
<code>bash &lt;(curl https://nixos.org/nix/install)</code>
<code>. /var/empty/.nix-profile/etc/profile.d/nix.sh</code>
<code>nix-channel --remove nixpkgs</code>
<code>nix-channel --add http://nixos.org/channels/nixos-<span title="Channel" id="branch">17.03-small</span> nixos</code>
<code>nix-channel --update</code>
<code>tee configuration.nix <<<'{fileSystems."/" = {};boot.loader.grub.enable = false;}'</code>
<code>export NIX_PATH=nixpkgs=/var/empty/.nix-defexpr/channels/nixos:nixos=/var/empty/.nix-defexpr/channels/nixos/nixos</code>
<code>export NIXOS_CONFIG=/var/empty/configuration.nix</code>
<code>nix-env -i -A config.system.build.nixos-install -A config.system.build.nixos-option -A config.system.build.nixos-generate-config -f "&lt;nixos&gt;"</code>
<code>exit</code></pre>

<pre class="root"><code>bash</code>
<code>export LANG=POSIX</code>
<code>export LC_ALL=POSIX</code>
<code>. /var/empty/.nix-profile/etc/profile.d/nix.sh</code>
<code>nixos-generate-config --root /mnt</code>
<code>cat &lt;&lt;EOF &gt; /mnt/etc/nixos/configuration.nix
{ config, pkgs, ... }:
{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];
  boot.loader.grub.enable = true;
  boot.loader.grub.version = 2;
  boot.loader.grub.device = "/dev/<span class="disk">sda</span>";
  services.openssh.enable = true;
}
EOF</code>
<code>export NIX_PATH=nixpkgs=/var/empty/.nix-defexpr/channels/nixos:nixos=/var/empty/.nix-defexpr/channels/nixos/nixos</code>
<code>export NIX_IGNORE_SYMLINK_STORE=1</code>
<code>sync; sysctl -w vm.drop_caches=3</code>
<code>nixos-install</code>
<code>nixos-install --chroot $(ls -1 /nix/store/*/bin/bash | head -1)</code></pre>

<p>
  This page contains copy-and-paste-able instructions to install NixOS from
  System Rescue CD, based on
  <a href="https://nixaid.com/deploying-nixos-256-ram-vps/">this nixaid</a>
  blog post.
</p>
<script>
  document.onload = (function() {
    document.querySelectorAll(".disk").forEach(function(span) {
        span.title = "Disk";
    });
    document.getElementById("input-disk").addEventListener("input", function(e) {
      e.preventDefault();
      document.querySelectorAll(".disk").forEach(function(span) {
        span.textContent = e.target.value;
      });
    });
    document.getElementById("input-branch").addEventListener("input", function(e) {
      e.preventDefault();
      document.getElementById("branch").textContent = e.target.value;
      if (/^(unstable|1[3-7]\.(0[349]|1[02]))(|-small)$/.exec(e.target.value) === null) {
        document.querySelector("#input-branch").style.backgroundColor = "red";
      } else {
        document.querySelector("#input-branch").style.backgroundColor = "lawngreen";
      }
    });
    document.getElementById("swap").addEventListener("input", function(e) {
      e.preventDefault();
      document.querySelectorAll('.swap').forEach(function(span){
        span.textContent = e.target.value;
      });
    });
  })()
</script>
